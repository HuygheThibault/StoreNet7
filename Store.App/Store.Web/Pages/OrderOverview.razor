@page "/Orders"
@using Store.Shared.Dto;
@using Store.Shared.Enums;
@using Store.Web.Helpers.Modals;
@using Store.Web.Components
@using Store.Web.Components.Dialog

<OrderDialog Order="@_order" OnResult="ResultReceived" />

<div class=row>
    <div class="data-grid-container sze-12 pd-1">
        <div class="grid-actions">
            <button class="mrg-0 pd-1" @onclick="AddOrder"> Add order</button>
        </div>
        <div class="data-grid">
            <div class="headers row">
                <div class="col"></div>
                @foreach (Column column in Columns)
                {
                    <div class="col">
                        <span class="pd-1" @onclick="() => ToggleSort(column)">
                            <strong>
                                @column.Name
                            </strong>
                            <i class="@(column.Sort == SortDirection.Ascending ? "fa-solid fa-arrow-right fa-rotate-270" : column.Sort == SortDirection.Descending ? "fa-solid fa-arrow-right fa-rotate-90" : "")" />
                            @if (column.SortOrder > -1)
                            {
                                <span>@column.SortOrder</span>
                            }
                        </span>
                    </div>
                }
            </div>
            <div class="rows">
                @if (_data != null)
                {
                    @foreach (var item in _data)
                    {
                        <div class="@("row " + (_data.IndexOf(item) % 2 == 0 ? "even" : "odd"))">
                            <div class="col pd-0">
                                <span @onclick="() => ExpandRow(item)" style="cursor: pointer">
                                    @if (_expandedOrder == item)
                                    {
                                        <i class="fa-solid fa-minus"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-solid fa-plus"></i>
                                    }
                                </span>
                            </div>
                            @foreach (Column column in Columns)
                            {
                                @if (column.Name == "actions")
                                {
                                    <div class="col">
                                        <div class="actions">
                                            <button class="edit" @onclick="() => Edit(item)">
                                                <i class="fa-solid fa-edit"></i>
                                            </button>
                                            <button class="remove" @onclick="() => DeleteItem(item)">
                                                <i class="fa-solid fa-trash-can"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col pd-0">
                                        <span>
                                            @if (column.ColumnType == "Dropdown")
                                            {
                                                @column?.Dropdown?.Values.FirstOrDefault(x => x.Id.ToString() == @GetPropValue(item, column.Name).ToString()).Value
                                            }
                                            else if (column.ColumnType == "Bool")
                                            {
                                                if (@GetPropValue(item, column.Name) == "True")
                                                {
                                                    <i class="fa-solid fa-check"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa-solid fa-xmark"></i>
                                                }
                                            }
                                            else
                                            {
                                                @GetPropValue(item, column.Name)
                                            }
                                        </span>
                                    </div>
                                }
                            }
                        </div>

                        <div class="rows" style="@(_expandedOrder == item ? "" : "display: none" )">
                            <div class="headers row">
                                @foreach (Column subColumn in SubColumns)
                                {
                                    <div class="col">
                                        <strong>@subColumn.Name</strong>
                                    </div>
                                }
                            </div>
                            @foreach (OrderLineDto orderline in item.OrderLines)
                            {
                                <div class="@("row " + (_data.IndexOf(item) % 2 == 0 ? "even" : "odd"))">
                                    @foreach (Column subColumn in SubColumns)
                                    {
                                        <div class="col pd-0">
                                            <span>
                                                @if (subColumn.ColumnType == "Dropdown")
                                                {
                                                    @subColumn?.Dropdown?.Values.FirstOrDefault(x => x.Id.ToString() == @GetPropValue(orderline, subColumn.Name).ToString()).Value
                                                }
                                                else
                                                {
                                                    @GetPropValue(orderline, subColumn.Name)
                                                }
                                            </span>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="loader"></div>
                }
            </div>
        </div>
        <div class="notifications">
            <NotificationBar noticiation="_noticiation" />
        </div>
    </div>
</div>
